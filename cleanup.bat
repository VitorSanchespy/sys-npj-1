@echo off
chcp 65001 >nul
echo.
echo üßπ ========================================
echo    SCRIPT DE LIMPEZA - SISTEMA NPJ
echo ========================================
echo.

REM Verificar se estamos no diret√≥rio correto
if not exist "backend" (
    echo ‚ùå Erro: Execute este script na raiz do projeto sys-npj-1
    echo.
    pause
    exit /b 1
)

echo üìÇ Diret√≥rio atual: %CD%
echo.

REM Parar processos Node.js se estiverem rodando
echo üõë Parando processos Node.js...
taskkill /f /im node.exe >nul 2>&1
taskkill /f /im npm.exe >nul 2>&1
timeout /t 2 /nobreak >nul

echo ‚úÖ Processos Node.js finalizados
echo.

REM Limpar arquivos tempor√°rios do sistema
echo üóëÔ∏è  Removendo arquivos tempor√°rios...

REM Backend - node_modules e arquivos de build
if exist "backend\node_modules" (
    echo    üì¶ Removendo backend\node_modules...
    rmdir /s /q "backend\node_modules" 2>nul
)

if exist "backend\package-lock.json" (
    echo    üîí Removendo backend\package-lock.json...
    del /q "backend\package-lock.json" 2>nul
)

REM Frontend - node_modules e arquivos de build
if exist "frontend\node_modules" (
    echo    üì¶ Removendo frontend\node_modules...
    rmdir /s /q "frontend\node_modules" 2>nul
)

if exist "frontend\package-lock.json" (
    echo    üîí Removendo frontend\package-lock.json...
    del /q "frontend\package-lock.json" 2>nul
)

if exist "frontend\dist" (
    echo    üèóÔ∏è  Removendo frontend\dist...
    rmdir /s /q "frontend\dist" 2>nul
)

if exist "frontend\.vite" (
    echo    ‚ö° Removendo frontend\.vite...
    rmdir /s /q "frontend\.vite" 2>nul
)

REM Arquivos de debug e mock
echo üêõ Removendo arquivos de debug e mock...

if exist "backend-mock.js" (
    echo    üé≠ Removendo backend-mock.js...
    del /q "backend-mock.js" 2>nul
)

if exist "frontend\src\components\debug" (
    echo    üîç Removendo pasta debug...
    rmdir /s /q "frontend\src\components\debug" 2>nul
)

if exist "test-api.js" (
    echo    üß™ Removendo test-api.js...
    del /q "test-api.js" 2>nul
)

REM Arquivos de log
echo üìã Removendo arquivos de log...
for /r %%i in (*.log) do (
    echo    üìÑ Removendo %%i...
    del /q "%%i" 2>nul
)

REM Arquivos tempor√°rios diversos
echo üîÑ Removendo arquivos tempor√°rios diversos...

for /r %%i in (*.tmp) do (
    echo    üìÑ Removendo %%i...
    del /q "%%i" 2>nul
)

for /r %%i in (*.temp) do (
    echo    üìÑ Removendo %%i...
    del /q "%%i" 2>nul
)

for /r %%i in (*~) do (
    echo    üìÑ Removendo %%i...
    del /q "%%i" 2>nul
)

REM Arquivos de backup do editor
for /r %%i in (*.bak) do (
    echo    üíæ Removendo %%i...
    del /q "%%i" 2>nul
)

for /r %%i in (*.orig) do (
    echo    üìÑ Removendo %%i...
    del /q "%%i" 2>nul
)

REM Arquivos de coverage de testes
if exist "coverage" (
    echo    üìä Removendo coverage...
    rmdir /s /q "coverage" 2>nul
)

if exist "backend\coverage" (
    echo    üìä Removendo backend\coverage...
    rmdir /s /q "backend\coverage" 2>nul
)

if exist "frontend\coverage" (
    echo    üìä Removendo frontend\coverage...
    rmdir /s /q "frontend\coverage" 2>nul
)

REM Arquivos de configura√ß√£o tempor√°ria
echo ‚öôÔ∏è  Removendo configura√ß√µes tempor√°rias...

if exist ".env.temp" (
    echo    üîß Removendo .env.temp...
    del /q ".env.temp" 2>nul
)

if exist "backend\.env.backup" (
    echo    üîß Removendo backend\.env.backup...
    del /q "backend\.env.backup" 2>nul
)

if exist "config.temp.js" (
    echo    üîß Removendo config.temp.js...
    del /q "config.temp.js" 2>nul
)

REM Limpar bancos de dados tempor√°rios (SQLite)
echo üóÑÔ∏è  Removendo bancos de dados tempor√°rios...

for /r %%i in (*.sqlite) do (
    echo    üóÑÔ∏è  Removendo %%i...
    del /q "%%i" 2>nul
)

for /r %%i in (*.db) do (
    echo    üóÑÔ∏è  Removendo %%i...
    del /q "%%i" 2>nul
)

echo.
echo ‚úÖ ========================================
echo    LIMPEZA CONCLU√çDA COM SUCESSO!
echo ========================================
echo.
echo üìù Resumo das a√ß√µes executadas:
echo    ‚Ä¢ Processos Node.js finalizados
echo    ‚Ä¢ node_modules removidos
echo    ‚Ä¢ Arquivos de build removidos
echo    ‚Ä¢ Arquivos de debug e mock removidos
echo    ‚Ä¢ Logs e cache limpos
echo    ‚Ä¢ Arquivos tempor√°rios removidos
echo    ‚Ä¢ Configura√ß√µes tempor√°rias limpas
echo    ‚Ä¢ Bancos de dados tempor√°rios removidos
echo.
echo üöÄ Para reinstalar depend√™ncias:
echo    cd backend ^&^& npm install
echo    cd frontend ^&^& npm install
echo.
echo üí° Para rodar o projeto:
echo    Backend: cd backend ^&^& npm start
echo    Frontend: cd frontend ^&^& npm run dev
echo.
pause
