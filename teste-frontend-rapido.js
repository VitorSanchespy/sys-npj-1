// Teste simples do sistema de notifica√ß√µes com credenciais reais
const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

// Usar credenciais que funcionaram no teste do backend
const realUser = {
  email: 'teste@teste.com',
  senha: 'teste123' // Se n√£o funcionar, vamos tentar outras
};

async function testeRapidoNotificacoes() {
  console.log('üîî TESTE R√ÅPIDO - SISTEMA DE NOTIFICA√á√ïES FRONTEND');
  console.log('=' .repeat(60));

  try {
    // 1. Login
    console.log('\n1Ô∏è‚É£ Fazendo login...');
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, realUser);
    const token = loginResponse.data.token;
    const user = loginResponse.data.user;
    console.log(`‚úÖ Login realizado: ${user.nome} (${user.role})`);

    // 2. Listar notifica√ß√µes
    console.log('\n2Ô∏è‚É£ Listando notifica√ß√µes...');
    const notifResponse = await axios.get(`${BASE_URL}/api/notificacoes`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log(`üìß Total de notifica√ß√µes: ${notifResponse.data.notificacoes?.length || 0}`);
    
    if (notifResponse.data.notificacoes?.length > 0) {
      console.log('üìã √öltimas 3 notifica√ß√µes:');
      notifResponse.data.notificacoes.slice(0, 3).forEach((notif, index) => {
        console.log(`   ${index + 1}. ${notif.titulo} - ${notif.tipo} (${notif.lida ? 'Lida' : 'N√£o lida'})`);
      });
    }

    // 3. Contador de n√£o lidas
    console.log('\n3Ô∏è‚É£ Verificando n√£o lidas...');
    const countResponse = await axios.get(`${BASE_URL}/api/notificacoes/nao-lidas/contador`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log(`üîî Notifica√ß√µes n√£o lidas: ${countResponse.data.count}`);

    // 4. Configura√ß√µes
    console.log('\n4Ô∏è‚É£ Testando configura√ß√µes...');
    const configResponse = await axios.get(`${BASE_URL}/api/notificacoes/configuracoes`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log('‚öôÔ∏è Configura√ß√µes obtidas:', configResponse.data.configuracao ? 'SIM' : 'CRIADAS');

    // 5. Atualizar configura√ß√£o de teste
    const novaConfig = {
      email_lembretes: true,
      email_alertas: true,
      email_agendamentos: true,
      horario_inicio: '08:00',
      horario_fim: '18:00'
    };
    
    await axios.put(`${BASE_URL}/api/notificacoes/configuracoes`, novaConfig, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log('‚úÖ Configura√ß√µes atualizadas');

    // 6. Criar um agendamento para gerar notifica√ß√£o
    console.log('\n5Ô∏è‚É£ Criando agendamento para gerar notifica√ß√£o...');
    const novoAgendamento = {
      titulo: 'Teste Frontend - Notifica√ß√µes',
      descricao: 'Agendamento para testar sistema de notifica√ß√µes do frontend',
      data_evento: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(), // Em 2 horas
      tipo_evento: 'reuniao',
      local: 'Sistema de Testes',
      lembrete_1_dia: true
    };

    const agendResponse = await axios.post(`${BASE_URL}/api/agendamentos`, novoAgendamento, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log(`üìÖ Agendamento criado: ID ${agendResponse.data.id}`);

    // 7. Aguardar e verificar nova notifica√ß√£o
    console.log('\n6Ô∏è‚É£ Aguardando processamento da notifica√ß√£o...');
    await new Promise(resolve => setTimeout(resolve, 3000));

    const novasNotifResponse = await axios.get(`${BASE_URL}/api/notificacoes`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    console.log(`üìß Total ap√≥s agendamento: ${novasNotifResponse.data.notificacoes?.length || 0}`);

    // Resultado Final
    console.log('\n' + 'üéâ'.repeat(20));
    console.log('‚úÖ TESTE COMPLETO - TODAS AS FUNCIONALIDADES OK!');
    console.log('\nüîß FUNCIONALIDADES TESTADAS:');
    console.log('   ‚úì Login e autentica√ß√£o');
    console.log('   ‚úì Listagem de notifica√ß√µes');
    console.log('   ‚úì Contador de n√£o lidas');
    console.log('   ‚úì Configura√ß√µes (obter e atualizar)');
    console.log('   ‚úì Cria√ß√£o de agendamento com notifica√ß√£o');
    
    console.log('\nüåê AGORA TESTE NO FRONTEND:');
    console.log('   1. Acesse: http://localhost:5173');
    console.log('   2. Fa√ßa login com: teste@teste.com / teste123');
    console.log('   3. Verifique o sino de notifica√ß√µes no header');
    console.log('   4. Acesse: /notificacoes');
    console.log('   5. Acesse: /notificacoes/configuracoes');
    console.log('\n‚ú® O sistema est√° pronto para uso!');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data?.erro || error.message);
  }
}

// Executar
testeRapidoNotificacoes();
