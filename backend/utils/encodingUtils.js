// Utilit√°rio para corrigir dados com encoding corrompido
const { sequelize } = require('../models/indexModels');

// Fun√ß√£o para corrigir encoding
function fixEncoding(text) {
  if (!text || typeof text !== 'string') return text;
  
  const charFixMap = {
    '√É¬ß': '√ß', '√É¬£': '√£', '√É¬°': '√°', '√É¬©': '√©', '√É¬≠': '√≠', '√É¬≥': '√≥', '√É¬∫': '√∫',
    '√É¬¢': '√¢', '√É¬™': '√™', '√É¬¥': '√¥', '√É ': '√†', '√É¬®': '√®', '√É¬¨': '√¨', '√É¬≤': '√≤',
    '√É¬π': '√π', '√É‚Ä¶': '√Ö', '√É‚Ä°': '√á'
  };
  
  let fixed = text;
  for (const [wrong, correct] of Object.entries(charFixMap)) {
    fixed = fixed.replace(new RegExp(wrong, 'g'), correct);
  }
  return fixed;
}

// Fun√ß√£o para corrigir dados no banco
async function fixDatabaseEncoding() {
  try {
    console.log('üîß Corrigindo encoding no banco de dados...');
    
    // Queries para corrigir as tabelas mais comuns
    const queries = [
      // Agendamentos
      `UPDATE agendamentos SET 
       titulo = REPLACE(REPLACE(REPLACE(titulo, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°'),
       descricao = REPLACE(REPLACE(REPLACE(descricao, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°'),
       local = REPLACE(REPLACE(REPLACE(local, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°')
       WHERE titulo LIKE '%√É%' OR descricao LIKE '%√É%' OR local LIKE '%√É%'`,
      
      // Processos
      `UPDATE processos SET 
       descricao = REPLACE(REPLACE(REPLACE(descricao, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°'),
       assistido = REPLACE(REPLACE(REPLACE(assistido, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°'),
       observacoes = REPLACE(REPLACE(REPLACE(observacoes, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°')
       WHERE descricao LIKE '%√É%' OR assistido LIKE '%√É%' OR observacoes LIKE '%√É%'`,
      
      // Usu√°rios
      `UPDATE usuarios SET 
       nome = REPLACE(REPLACE(REPLACE(nome, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°')
       WHERE nome LIKE '%√É%'`,
       
      // Tabelas auxiliares
      `UPDATE fases SET nome = REPLACE(REPLACE(REPLACE(nome, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°') WHERE nome LIKE '%√É%'`,
      `UPDATE materias_assunto SET nome = REPLACE(REPLACE(REPLACE(nome, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°') WHERE nome LIKE '%√É%'`,
      `UPDATE locais_tramitacao SET nome = REPLACE(REPLACE(REPLACE(nome, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°') WHERE nome LIKE '%√É%'`,
      `UPDATE diligencias SET nome = REPLACE(REPLACE(REPLACE(nome, '√É¬ß', '√ß'), '√É¬£', '√£'), '√É¬°', '√°') WHERE nome LIKE '%√É%'`
    ];
    
    for (const query of queries) {
      try {
        const [results] = await sequelize.query(query);
        if (results.affectedRows > 0) {
          console.log(`‚úÖ Corrigidos ${results.affectedRows} registros`);
        }
      } catch (error) {
        console.log(`‚ö†Ô∏è Erro em query (normal se tabela n√£o existir):`, error.message);
      }
    }
    
    console.log('‚úÖ Corre√ß√£o de encoding conclu√≠da');
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao corrigir encoding:', error);
    return false;
  }
}

module.exports = {
  fixEncoding,
  fixDatabaseEncoding
};
